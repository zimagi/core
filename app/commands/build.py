from systems.commands.index import Command
from utility.data import RecursiveCollection

import os
import shutil


class Build(Command("build")):
    def exec(self):
        self.info("Cleaning autogenerated specifications")
        for module in self._list_modules():
            auto_spec_path = os.path.join(module.path, "spec", "auto")
            if os.path.exists(auto_spec_path):
                shutil.rmtree(auto_spec_path)

        self.info("Building module specifications")
        for module in self._list_modules():
            self.exec_local(
                "run",
                {
                    "module_key": module.config.name,
                    "profile_key": "build",
                    "ignore_missing": True,
                    "worker_type": "none",
                    "local": True,
                },
            )

    def _list_modules(self):
        for path, config in self.manager.index.get_ordered_modules().items():
            if os.path.exists(os.path.join(path, "profiles", "build.yml")):
                yield RecursiveCollection(
                    path=path,
                    config=config,
                )
